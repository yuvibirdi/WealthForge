/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 future_city.gltf --transform --types 
Files: future_city.gltf [32.11MB] > /Users/user/Desktop/Projects/wealthforge/public/future_city-transformed.glb [698.13KB] (98%)
*/

import type * as THREE from 'three'
import type { GLTF } from 'three-stdlib'
import { useGLTF } from '@react-three/drei'

type GLTFAction = THREE.AnimationClip

type GLTFResult = GLTF & {
  nodes: {
    BP_Building_01_MI_Walls_0: THREE.Mesh
    BP_Building_01__0: THREE.Mesh
  }
  materials: {
    PaletteMaterial001: THREE.MeshStandardMaterial
  }
  animations: GLTFAction[]
}

export default function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/models/future_city-transformed.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.BP_Building_01_MI_Walls_0.geometry} material={materials.PaletteMaterial001} position={[-29.76, 58.92, 45]} rotation={[-Math.PI / 2, 0, 0]} scale={0.01} />
      <mesh geometry={nodes.BP_Building_01__0.geometry} material={nodes.BP_Building_01__0.material} position={[-29.76, 58.92, 45]} rotation={[-Math.PI / 2, 0, 0]} scale={0.01} />
    </group>
  )
}

useGLTF.preload('/models/future_city-transformed.glb')